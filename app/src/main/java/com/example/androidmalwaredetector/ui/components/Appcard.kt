package com.example.androidmalwaredetector.ui.components

import androidx.compose.foundation.clickable
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material3.*
import androidx.compose.runtime.Composable
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.unit.dp
import coil.compose.AsyncImage
import com.example.androidmalwaredetector.model.AppInfo
import com.example.androidmalwaredetector.ui.components.StatusBadge
import com.example.androidmalwaredetector.ui.theme.DarkGray
import com.example.androidmalwaredetector.ui.theme.NeonCyan
// Composable function to display an app's details in a card format
// Parameters: appInfo (data model for app details), onClick (callback for card click)
@Composable
fun AppCard(appInfo: AppInfo, onClick: () -> Unit) {
    // Card composable to create a card UI element
    Card(
        modifier = Modifier
            .padding(horizontal = 12.dp, vertical = 6.dp)
            .fillMaxWidth()
            .clickable { onClick() },
        shape = RoundedCornerShape(12.dp),
        elevation = CardDefaults.cardElevation(4.dp),
        colors = CardDefaults.cardColors(
            containerColor = DarkGray.copy(alpha = 0.3f)
        )
    ) {
        // Row to arrange the app icon, details, and status badge horizontally
        Row(
            modifier = Modifier
                .padding(12.dp)
                .fillMaxWidth(),
            horizontalArrangement = Arrangement.SpaceBetween
        ) {
            // Display the app's icon using Coil's AsyncImage for async image loading
            AsyncImage(
                model = appInfo.icon,
                contentDescription = null,
                modifier = Modifier.size(50.dp)
            )

            Spacer(modifier = Modifier.width(12.dp))

            Column(modifier = Modifier.weight(1f)) {
                Text(
                    text = appInfo.appName,
                    style = MaterialTheme.typography.titleSmall.copy(
                        color = Color.White,
                        fontWeight = FontWeight.Medium
                    )
                )
                Text(
                    text = appInfo.packageName,
                    style = MaterialTheme.typography.bodySmall.copy(
                        color = Color.White.copy(alpha = 0.7f)
                    )
                )
                Text(
                    text = "Size: %.1f MB".format(appInfo.sizeMB),
                    style = MaterialTheme.typography.bodySmall.copy(
                        color = NeonCyan.copy(alpha = 0.8f)
                    )
                )
            }

            StatusBadge(appInfo.status)
        }
    }
}

