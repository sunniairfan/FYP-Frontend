package com.example.androidmalwaredetector.ui.screens

import androidx.compose.animation.core.*
import androidx.compose.foundation.background
import androidx.compose.foundation.border
import androidx.compose.foundation.clickable
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.blur
import androidx.compose.ui.graphics.Brush
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import androidx.navigation.NavController
import com.example.androidmalwaredetector.ui.theme.DarkNavy
import com.example.androidmalwaredetector.ui.theme.NeonCyan
import com.example.androidmalwaredetector.ui.theme.DarkGray

@Composable
fun HomeScreen(navController: NavController) {
    // Create an infinite animation for a glowing effect
    val infiniteTransition = rememberInfiniteTransition(label = "glow")
    val glowAnimation by infiniteTransition.animateFloat(
        initialValue = 0.6f,
        targetValue = 1f,
        animationSpec = infiniteRepeatable(
            animation = tween(2000),
            repeatMode = RepeatMode.Reverse
        ),
        label = "glow"
    )

    Box(
        modifier = Modifier
            .fillMaxSize()
            .background(
                Brush.verticalGradient(
                    colors = listOf(
                        DarkNavy,
                        Color(0xFF0D1421),
                        DarkNavy
                    )
                )
            )
    ) {
        Column(
            verticalArrangement = Arrangement.Center,
            horizontalAlignment = Alignment.CenterHorizontally,
            modifier = Modifier
                .fillMaxSize()
                .padding(16.dp)
        ) {
            // Enhanced title
            Text(
                text = "ANDROID",
                style = MaterialTheme.typography.displayLarge.copy(
                    fontSize = 38.sp,
                    fontWeight = FontWeight.Black,
                    letterSpacing = 3.sp
                ),
                color = NeonCyan.copy(alpha = glowAnimation),
                textAlign = TextAlign.Center
            )

            Text(
                text = "MALWARE DETECTOR",
                style = MaterialTheme.typography.displayMedium.copy(
                    fontSize = 22.sp,
                    fontWeight = FontWeight.Bold,
                    letterSpacing = 2.sp
                ),
                color = Color.White.copy(alpha = 0.9f),
                textAlign = TextAlign.Center,
                modifier = Modifier.padding(bottom = 48.dp)
            )

            // Enhanced scan button
            EnhancedCyberButton(
                text = "INITIATE SCAN",
                onClick = { navController.navigate("apps") },
                glowIntensity = glowAnimation
            )
        }
    }
}

@Composable
fun EnhancedCyberButton(
    text: String,
    onClick: () -> Unit,
    glowIntensity: Float
) {
    Box(
        modifier = Modifier
            .fillMaxWidth(0.7f)
            .height(56.dp)
    ) {
        // Glow effect
        Box(
            modifier = Modifier
                .fillMaxSize()
                .background(
                    NeonCyan.copy(alpha = 0.3f * glowIntensity),
                    shape = RoundedCornerShape(28.dp)
                )
                .blur(12.dp)
        )

        // Main button
        Box(
            contentAlignment = Alignment.Center,
            modifier = Modifier
                .fillMaxSize()
                .background(
                    Brush.horizontalGradient(
                        colors = listOf(
                            NeonCyan.copy(alpha = 0.9f),
                            NeonCyan,
                            NeonCyan.copy(alpha = 0.9f)
                        )
                    ),
                    shape = RoundedCornerShape(28.dp)
                )
                .border(
                    2.dp,
                    Color.White.copy(alpha = 0.3f),
                    RoundedCornerShape(28.dp)
                )
                .clickable { onClick() }
        ) {
            Text(
                text = text,
                style = MaterialTheme.typography.labelLarge.copy(
                    fontSize = 16.sp,
                    fontWeight = FontWeight.Bold,
                    letterSpacing = 2.sp
                ),
                color = DarkNavy
            )
        }
    }
}

@Composable
fun CyberButton(
    text: String,
    onClick: () -> Unit
) {
    Box(
        modifier = Modifier
            .background(NeonCyan, shape = RoundedCornerShape(16.dp))
            .padding(4.dp)
    ) {
        Box(
            modifier = Modifier
                .background(DarkGray.copy(alpha = 0.7f), shape = RoundedCornerShape(12.dp))
                .clickable { onClick() }
                .padding(horizontal = 32.dp, vertical = 16.dp)
        ) {
            Text(
                text = text,
                style = MaterialTheme.typography.labelSmall,
                color = Color.Black,
                modifier = Modifier.align(Alignment.Center)
            )
        }
    }
}

